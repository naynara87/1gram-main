{"version":3,"sources":["webpack://keen/webpack/bootstrap","webpack://keen/webpack/runtime/define property getters","webpack://keen/webpack/runtime/hasOwnProperty shorthand","webpack://keen/webpack/runtime/make namespace object","webpack://keen/../demo1/src/js/pages/aos/libs/observer.js"],"names":[],"mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA,iEAAe,KAAK,EAAC","file":"js/pages/aos/libs/observer.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let callback = () => {};\n\nfunction ready(selector, fn) {\n  const doc = window.document;\n  const MutationObserver =\n  window.MutationObserver ||\n  window.WebKitMutationObserver ||\n  window.MozMutationObserver;\n\n  const observer = new MutationObserver(check);\n  callback = fn;\n\n  observer.observe(doc.documentElement, {\n    childList: true,\n    subtree: true,\n    removedNodes: true\n  });\n}\n\nfunction check(mutations) {\n  if (!mutations) return;\n\n  mutations.forEach(mutation => {\n    const addedNodes = Array.prototype.slice.call(mutation.addedNodes);\n    const removedNodes = Array.prototype.slice.call(mutation.removedNodes);\n\n    const anyAOSElementAdded = addedNodes\n      .concat(removedNodes)\n      .filter(el => el.hasAttribute && el.hasAttribute('data-aos'))\n      .length;\n\n    if (anyAOSElementAdded) {\n      callback();\n    }\n  });\n}\n\nexport default ready;\n"],"sourceRoot":""}